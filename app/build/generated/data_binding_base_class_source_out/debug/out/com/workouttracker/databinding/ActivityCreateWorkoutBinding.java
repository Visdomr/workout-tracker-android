// Generated by view binder compiler. Do not edit!
package com.workouttracker.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.ProgressBar;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.textfield.TextInputEditText;
import com.google.android.material.textfield.TextInputLayout;
import com.workouttracker.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityCreateWorkoutBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final MaterialButton buttonCancel;

  @NonNull
  public final MaterialButton buttonSave;

  @NonNull
  public final TextInputEditText editTextWorkoutName;

  @NonNull
  public final TextInputEditText editTextWorkoutNotes;

  @NonNull
  public final ProgressBar progressBar;

  @NonNull
  public final TextInputLayout textInputLayoutWorkoutName;

  @NonNull
  public final TextInputLayout textInputLayoutWorkoutNotes;

  @NonNull
  public final TextView textWorkoutDate;

  @NonNull
  public final TextView textWorkoutDuration;

  @NonNull
  public final Toolbar toolbar;

  private ActivityCreateWorkoutBinding(@NonNull LinearLayout rootView,
      @NonNull MaterialButton buttonCancel, @NonNull MaterialButton buttonSave,
      @NonNull TextInputEditText editTextWorkoutName,
      @NonNull TextInputEditText editTextWorkoutNotes, @NonNull ProgressBar progressBar,
      @NonNull TextInputLayout textInputLayoutWorkoutName,
      @NonNull TextInputLayout textInputLayoutWorkoutNotes, @NonNull TextView textWorkoutDate,
      @NonNull TextView textWorkoutDuration, @NonNull Toolbar toolbar) {
    this.rootView = rootView;
    this.buttonCancel = buttonCancel;
    this.buttonSave = buttonSave;
    this.editTextWorkoutName = editTextWorkoutName;
    this.editTextWorkoutNotes = editTextWorkoutNotes;
    this.progressBar = progressBar;
    this.textInputLayoutWorkoutName = textInputLayoutWorkoutName;
    this.textInputLayoutWorkoutNotes = textInputLayoutWorkoutNotes;
    this.textWorkoutDate = textWorkoutDate;
    this.textWorkoutDuration = textWorkoutDuration;
    this.toolbar = toolbar;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityCreateWorkoutBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityCreateWorkoutBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_create_workout, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityCreateWorkoutBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.button_cancel;
      MaterialButton buttonCancel = ViewBindings.findChildViewById(rootView, id);
      if (buttonCancel == null) {
        break missingId;
      }

      id = R.id.button_save;
      MaterialButton buttonSave = ViewBindings.findChildViewById(rootView, id);
      if (buttonSave == null) {
        break missingId;
      }

      id = R.id.edit_text_workout_name;
      TextInputEditText editTextWorkoutName = ViewBindings.findChildViewById(rootView, id);
      if (editTextWorkoutName == null) {
        break missingId;
      }

      id = R.id.edit_text_workout_notes;
      TextInputEditText editTextWorkoutNotes = ViewBindings.findChildViewById(rootView, id);
      if (editTextWorkoutNotes == null) {
        break missingId;
      }

      id = R.id.progress_bar;
      ProgressBar progressBar = ViewBindings.findChildViewById(rootView, id);
      if (progressBar == null) {
        break missingId;
      }

      id = R.id.text_input_layout_workout_name;
      TextInputLayout textInputLayoutWorkoutName = ViewBindings.findChildViewById(rootView, id);
      if (textInputLayoutWorkoutName == null) {
        break missingId;
      }

      id = R.id.text_input_layout_workout_notes;
      TextInputLayout textInputLayoutWorkoutNotes = ViewBindings.findChildViewById(rootView, id);
      if (textInputLayoutWorkoutNotes == null) {
        break missingId;
      }

      id = R.id.text_workout_date;
      TextView textWorkoutDate = ViewBindings.findChildViewById(rootView, id);
      if (textWorkoutDate == null) {
        break missingId;
      }

      id = R.id.text_workout_duration;
      TextView textWorkoutDuration = ViewBindings.findChildViewById(rootView, id);
      if (textWorkoutDuration == null) {
        break missingId;
      }

      id = R.id.toolbar;
      Toolbar toolbar = ViewBindings.findChildViewById(rootView, id);
      if (toolbar == null) {
        break missingId;
      }

      return new ActivityCreateWorkoutBinding((LinearLayout) rootView, buttonCancel, buttonSave,
          editTextWorkoutName, editTextWorkoutNotes, progressBar, textInputLayoutWorkoutName,
          textInputLayoutWorkoutNotes, textWorkoutDate, textWorkoutDuration, toolbar);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
