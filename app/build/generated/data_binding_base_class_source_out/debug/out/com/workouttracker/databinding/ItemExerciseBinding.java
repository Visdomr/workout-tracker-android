// Generated by view binder compiler. Do not edit!
package com.workouttracker.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.card.MaterialCardView;
import com.google.android.material.chip.Chip;
import com.workouttracker.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemExerciseBinding implements ViewBinding {
  @NonNull
  private final MaterialCardView rootView;

  @NonNull
  public final MaterialButton buttonDelete;

  @NonNull
  public final MaterialButton buttonEdit;

  @NonNull
  public final Chip chipCategory;

  @NonNull
  public final TextView textExerciseCategory;

  @NonNull
  public final TextView textExerciseName;

  @NonNull
  public final TextView textSetCount;

  @NonNull
  public final TextView textSetSummary;

  private ItemExerciseBinding(@NonNull MaterialCardView rootView,
      @NonNull MaterialButton buttonDelete, @NonNull MaterialButton buttonEdit,
      @NonNull Chip chipCategory, @NonNull TextView textExerciseCategory,
      @NonNull TextView textExerciseName, @NonNull TextView textSetCount,
      @NonNull TextView textSetSummary) {
    this.rootView = rootView;
    this.buttonDelete = buttonDelete;
    this.buttonEdit = buttonEdit;
    this.chipCategory = chipCategory;
    this.textExerciseCategory = textExerciseCategory;
    this.textExerciseName = textExerciseName;
    this.textSetCount = textSetCount;
    this.textSetSummary = textSetSummary;
  }

  @Override
  @NonNull
  public MaterialCardView getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemExerciseBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemExerciseBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_exercise, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemExerciseBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.button_delete;
      MaterialButton buttonDelete = ViewBindings.findChildViewById(rootView, id);
      if (buttonDelete == null) {
        break missingId;
      }

      id = R.id.button_edit;
      MaterialButton buttonEdit = ViewBindings.findChildViewById(rootView, id);
      if (buttonEdit == null) {
        break missingId;
      }

      id = R.id.chip_category;
      Chip chipCategory = ViewBindings.findChildViewById(rootView, id);
      if (chipCategory == null) {
        break missingId;
      }

      id = R.id.text_exercise_category;
      TextView textExerciseCategory = ViewBindings.findChildViewById(rootView, id);
      if (textExerciseCategory == null) {
        break missingId;
      }

      id = R.id.text_exercise_name;
      TextView textExerciseName = ViewBindings.findChildViewById(rootView, id);
      if (textExerciseName == null) {
        break missingId;
      }

      id = R.id.text_set_count;
      TextView textSetCount = ViewBindings.findChildViewById(rootView, id);
      if (textSetCount == null) {
        break missingId;
      }

      id = R.id.text_set_summary;
      TextView textSetSummary = ViewBindings.findChildViewById(rootView, id);
      if (textSetSummary == null) {
        break missingId;
      }

      return new ItemExerciseBinding((MaterialCardView) rootView, buttonDelete, buttonEdit,
          chipCategory, textExerciseCategory, textExerciseName, textSetCount, textSetSummary);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
