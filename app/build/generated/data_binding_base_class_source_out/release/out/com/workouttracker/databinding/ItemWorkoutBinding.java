// Generated by view binder compiler. Do not edit!
package com.workouttracker.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.card.MaterialCardView;
import com.google.android.material.chip.Chip;
import com.workouttracker.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemWorkoutBinding implements ViewBinding {
  @NonNull
  private final MaterialCardView rootView;

  @NonNull
  public final MaterialButton buttonDelete;

  @NonNull
  public final MaterialButton buttonEdit;

  @NonNull
  public final Chip chipCategory1;

  @NonNull
  public final Chip chipCategory2;

  @NonNull
  public final Chip chipCategory3;

  @NonNull
  public final TextView textExerciseCount;

  @NonNull
  public final TextView textWorkoutDate;

  @NonNull
  public final TextView textWorkoutDuration;

  @NonNull
  public final TextView textWorkoutName;

  @NonNull
  public final TextView textWorkoutNotes;

  private ItemWorkoutBinding(@NonNull MaterialCardView rootView,
      @NonNull MaterialButton buttonDelete, @NonNull MaterialButton buttonEdit,
      @NonNull Chip chipCategory1, @NonNull Chip chipCategory2, @NonNull Chip chipCategory3,
      @NonNull TextView textExerciseCount, @NonNull TextView textWorkoutDate,
      @NonNull TextView textWorkoutDuration, @NonNull TextView textWorkoutName,
      @NonNull TextView textWorkoutNotes) {
    this.rootView = rootView;
    this.buttonDelete = buttonDelete;
    this.buttonEdit = buttonEdit;
    this.chipCategory1 = chipCategory1;
    this.chipCategory2 = chipCategory2;
    this.chipCategory3 = chipCategory3;
    this.textExerciseCount = textExerciseCount;
    this.textWorkoutDate = textWorkoutDate;
    this.textWorkoutDuration = textWorkoutDuration;
    this.textWorkoutName = textWorkoutName;
    this.textWorkoutNotes = textWorkoutNotes;
  }

  @Override
  @NonNull
  public MaterialCardView getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemWorkoutBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemWorkoutBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_workout, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemWorkoutBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.button_delete;
      MaterialButton buttonDelete = ViewBindings.findChildViewById(rootView, id);
      if (buttonDelete == null) {
        break missingId;
      }

      id = R.id.button_edit;
      MaterialButton buttonEdit = ViewBindings.findChildViewById(rootView, id);
      if (buttonEdit == null) {
        break missingId;
      }

      id = R.id.chip_category_1;
      Chip chipCategory1 = ViewBindings.findChildViewById(rootView, id);
      if (chipCategory1 == null) {
        break missingId;
      }

      id = R.id.chip_category_2;
      Chip chipCategory2 = ViewBindings.findChildViewById(rootView, id);
      if (chipCategory2 == null) {
        break missingId;
      }

      id = R.id.chip_category_3;
      Chip chipCategory3 = ViewBindings.findChildViewById(rootView, id);
      if (chipCategory3 == null) {
        break missingId;
      }

      id = R.id.text_exercise_count;
      TextView textExerciseCount = ViewBindings.findChildViewById(rootView, id);
      if (textExerciseCount == null) {
        break missingId;
      }

      id = R.id.text_workout_date;
      TextView textWorkoutDate = ViewBindings.findChildViewById(rootView, id);
      if (textWorkoutDate == null) {
        break missingId;
      }

      id = R.id.text_workout_duration;
      TextView textWorkoutDuration = ViewBindings.findChildViewById(rootView, id);
      if (textWorkoutDuration == null) {
        break missingId;
      }

      id = R.id.text_workout_name;
      TextView textWorkoutName = ViewBindings.findChildViewById(rootView, id);
      if (textWorkoutName == null) {
        break missingId;
      }

      id = R.id.text_workout_notes;
      TextView textWorkoutNotes = ViewBindings.findChildViewById(rootView, id);
      if (textWorkoutNotes == null) {
        break missingId;
      }

      return new ItemWorkoutBinding((MaterialCardView) rootView, buttonDelete, buttonEdit,
          chipCategory1, chipCategory2, chipCategory3, textExerciseCount, textWorkoutDate,
          textWorkoutDuration, textWorkoutName, textWorkoutNotes);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
